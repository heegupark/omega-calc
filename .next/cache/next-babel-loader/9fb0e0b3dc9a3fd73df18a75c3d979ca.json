{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-calc/components/input-pad.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Flex, Box, SimpleGrid } from '@chakra-ui/core';\nexport default function InputPad(props) {\n  const {\n    0: fontSize,\n    1: setFontSize\n  } = useState('42px');\n  useEffect(() => {\n    setFontSize(Number(props.input).toString().length > 11 ? `${42 - props.input.toString().length}px` : '42px');\n  }, [props.input]);\n\n  const formatInput = inputStr => {\n    const hasE = Number(inputStr).toString().includes('e');\n    const hasDot = inputStr.includes('.');\n    let result = '';\n\n    if (inputStr.length > 21) {\n      result = 'Out of Range';\n      setFontSize('42px');\n    } else {\n      if (hasDot) {\n        result = Number(inputStr.split('.')[0]).toLocaleString() + '.' + inputStr.split('.')[1];\n      } else {\n        result = hasE ? Number(inputStr).toString() : Number(inputStr).toLocaleString();\n      }\n    }\n\n    return result;\n  };\n\n  return __jsx(Flex // width=\"300px\"\n  , {\n    align: \"center\",\n    height: \"60px\",\n    color: \"white\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(SimpleGrid, {\n    columns: 1,\n    spacing: 1,\n    width: \"100%\",\n    p: 2,\n    fontSize: fontSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    textAlign: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, formatInput(props.input))));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-calc/components/input-pad.tsx"],"names":["React","useState","useEffect","Flex","Box","SimpleGrid","InputPad","props","fontSize","setFontSize","Number","input","toString","length","formatInput","inputStr","hasE","includes","hasDot","result","split","toLocaleString"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAgBC,IAAhB,EAAsBC,GAAtB,EAAsCC,UAAtC,QAAwD,iBAAxD;AAMA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyC;AACtD,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC,MAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,WAAW,CACTC,MAAM,CAACH,KAAK,CAACI,KAAP,CAAN,CAAoBC,QAApB,GAA+BC,MAA/B,GAAwC,EAAxC,GACK,GAAE,KAAKN,KAAK,CAACI,KAAN,CAAYC,QAAZ,GAAuBC,MAAO,IAD1C,GAEI,MAHK,CAAX;AAKD,GANQ,EAMN,CAACN,KAAK,CAACI,KAAP,CANM,CAAT;;AAQA,QAAMG,WAAW,GAAIC,QAAD,IAAsB;AACxC,UAAMC,IAAI,GAAGN,MAAM,CAACK,QAAD,CAAN,CAAiBH,QAAjB,GAA4BK,QAA5B,CAAqC,GAArC,CAAb;AACA,UAAMC,MAAM,GAAGH,QAAQ,CAACE,QAAT,CAAkB,GAAlB,CAAf;AACA,QAAIE,MAAM,GAAG,EAAb;;AACA,QAAIJ,QAAQ,CAACF,MAAT,GAAkB,EAAtB,EAA0B;AACxBM,MAAAA,MAAM,GAAG,cAAT;AACAV,MAAAA,WAAW,CAAC,MAAD,CAAX;AACD,KAHD,MAGO;AACL,UAAIS,MAAJ,EAAY;AACVC,QAAAA,MAAM,GACJT,MAAM,CAACK,QAAQ,CAACK,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAD,CAAN,CAA+BC,cAA/B,KACA,GADA,GAEAN,QAAQ,CAACK,KAAT,CAAe,GAAf,EAAoB,CAApB,CAHF;AAID,OALD,MAKO;AACLD,QAAAA,MAAM,GAAGH,IAAI,GACTN,MAAM,CAACK,QAAD,CAAN,CAAiBH,QAAjB,EADS,GAETF,MAAM,CAACK,QAAD,CAAN,CAAiBM,cAAjB,EAFJ;AAGD;AACF;;AAED,WAAOF,MAAP;AACD,GArBD;;AAuBA,SACE,MAAC,IAAD,CACE;AADF;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,MAAM,EAAC,MAHT;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,QAAQ,EAAC,QALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,UAAD;AACE,IAAA,OAAO,EAAE,CADX;AAEE,IAAA,OAAO,EAAE,CAFX;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,CAAC,EAAE,CAJL;AAKE,IAAA,QAAQ,EAAEX,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBM,WAAW,CAACP,KAAK,CAACI,KAAP,CAAnC,CAPF,CAPF,CADF;AAmBD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Input, Flex, Box, PseudoBox, SimpleGrid } from '@chakra-ui/core';\n\ninterface IInputPadProps {\n  input: string;\n}\n\nexport default function InputPad(props: IInputPadProps) {\n  const [fontSize, setFontSize] = useState('42px');\n\n  useEffect(() => {\n    setFontSize(\n      Number(props.input).toString().length > 11\n        ? `${42 - props.input.toString().length}px`\n        : '42px'\n    );\n  }, [props.input]);\n\n  const formatInput = (inputStr: string) => {\n    const hasE = Number(inputStr).toString().includes('e');\n    const hasDot = inputStr.includes('.');\n    let result = '';\n    if (inputStr.length > 21) {\n      result = 'Out of Range';\n      setFontSize('42px');\n    } else {\n      if (hasDot) {\n        result =\n          Number(inputStr.split('.')[0]).toLocaleString() +\n          '.' +\n          inputStr.split('.')[1];\n      } else {\n        result = hasE\n          ? Number(inputStr).toString()\n          : Number(inputStr).toLocaleString();\n      }\n    }\n\n    return result;\n  };\n\n  return (\n    <Flex\n      // width=\"300px\"\n      align=\"center\"\n      height=\"60px\"\n      color=\"white\"\n      overflow=\"hidden\"\n    >\n      <SimpleGrid\n        columns={1}\n        spacing={1}\n        width=\"100%\"\n        p={2}\n        fontSize={fontSize}\n      >\n        <Box textAlign=\"right\">{formatInput(props.input)}</Box>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}