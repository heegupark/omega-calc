{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-calc/components/number-pad.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Flex, SimpleGrid } from '@chakra-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nconst useStyles = makeStyles(theme => createStyles({\n  pad: {\n    // width: '300px',\n    alignItems: 'center',\n    justifyContent: 'center' // height: '400px',\n\n  },\n  box: {\n    // width: '100px',\n    alignItems: 'center',\n    justifyContent: 'center' // height: '100px',\n\n  },\n  number: {\n    cursor: 'pointer',\n    backgroundColor: 'rgb(51,51,51)',\n    width: '70px',\n    height: '70px',\n    borderRadius: '50%',\n    color: 'white',\n    fontSize: '36px',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&:hover': {\n      backgroundColor: 'rgb(75,75,75)'\n    },\n    '&:active': {\n      backgroundColor: 'rgb(115,115,115)'\n    }\n  },\n  sign: {\n    backgroundColor: 'rgb(166,166,166)',\n    color: 'black',\n    fontSize: '30px',\n    '&:hover': {\n      backgroundColor: 'rgb(190,190,190)'\n    },\n    '&:active': {\n      backgroundColor: 'rgb(217,217,217)'\n    }\n  },\n  symbol: {\n    backgroundColor: 'rgb(242,162,60)',\n    '&:hover': {\n      backgroundColor: 'rgb(243,180,100)'\n    },\n    '&:active': {\n      backgroundColor: 'rgb(244,200,149)'\n    }\n  }\n}));\nexport default function NumberPad(props) {\n  const classes = useStyles();\n  const keypad = [{\n    value: 'AC',\n    type: 'sign'\n  }, {\n    value: '+/−',\n    type: 'sign'\n  }, {\n    value: '%',\n    type: 'sign'\n  }, {\n    value: '÷',\n    type: 'symbol'\n  }, {\n    value: '7',\n    type: 'number'\n  }, {\n    value: '8',\n    type: 'number'\n  }, {\n    value: '9',\n    type: 'number'\n  }, {\n    value: 'X',\n    type: 'symbol'\n  }, {\n    value: '4',\n    type: 'number'\n  }, {\n    value: '5',\n    type: 'number'\n  }, {\n    value: '6',\n    type: 'number'\n  }, {\n    value: '−',\n    type: 'symbol'\n  }, {\n    value: '1',\n    type: 'number'\n  }, {\n    value: '2',\n    type: 'number'\n  }, {\n    value: '3',\n    type: 'number'\n  }, {\n    value: '+',\n    type: 'symbol'\n  }, {\n    value: '0',\n    type: 'number'\n  }, {\n    value: '00',\n    type: 'number'\n  }, {\n    value: '.',\n    type: 'number'\n  }, {\n    value: '=',\n    type: 'symbol'\n  }];\n\n  const handleClick = input => {\n    const newInput = props.input[0] === '0' ? props.input.substring(1) + input : props.input + input;\n    props.setInput(newInput);\n  };\n\n  return __jsx(Flex, {\n    className: classes.pad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, __jsx(SimpleGrid, {\n    columns: 4,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, keypad.map((key, index) => {\n    let classStr = null;\n\n    switch (key.value) {\n      case 'number':\n        classStr = 'classes.number';\n        break;\n\n      case 'number':\n        classStr = 'classes.number';\n        break;\n\n      default:\n        classStr = 'classes.number';\n        break;\n    }\n\n    return __jsx(Flex, {\n      className: classes.box,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, __jsx(Flex, {\n      className: key.type === 'number' ? classes.number : key.type === 'sign' ? clsx(classes.number, classes.sign) : clsx(classes.number, classes.symbol),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, key.value));\n  }), __jsx(Flex, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    className: clsx(classes.number, classes.sign),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, \"AC\")), __jsx(Flex, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    className: clsx(classes.number, classes.sign),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, '+/−')), __jsx(Flex, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    className: clsx(classes.number, classes.sign),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, \"%\")), __jsx(Flex, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    className: clsx(classes.number, classes.symbol),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, \"\\xF7\")), __jsx(Flex, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    className: classes.number,\n    onClick: () => handleClick('7'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, \"7\")), __jsx(Flex, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    className: classes.number,\n    onClick: () => handleClick('7'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, \"8\")), __jsx(Flex, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    className: classes.number,\n    onClick: () => handleClick('7'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, \"9\")), __jsx(Flex, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    className: clsx(classes.number, classes.symbol),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, \"X\")), __jsx(Flex, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    className: classes.number,\n    onClick: () => handleClick('7'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, \"4\")), __jsx(Flex, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    className: classes.number,\n    onClick: () => handleClick('7'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, \"5\")), __jsx(Flex, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    className: classes.number,\n    onClick: () => handleClick('7'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, \"6\")), __jsx(Flex, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    className: clsx(classes.number, classes.symbol),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, \"\\u2212\")), __jsx(Flex, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    className: classes.number,\n    onClick: () => handleClick('7'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, \"1\")), __jsx(Flex, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    className: classes.number,\n    onClick: () => handleClick('7'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, \"2\")), __jsx(Flex, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    className: classes.number,\n    onClick: () => handleClick('7'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, \"3\")), __jsx(Flex, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    className: clsx(classes.number, classes.symbol),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, \"+\")), __jsx(Flex, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    className: classes.number,\n    onClick: () => handleClick('7'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, \"0\")), __jsx(Flex, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    className: classes.number,\n    onClick: () => handleClick('7'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, \"00\")), __jsx(Flex, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    className: classes.number,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, \".\")), __jsx(Flex, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    className: clsx(classes.number, classes.symbol),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, \"=\"))));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-calc/components/number-pad.tsx"],"names":["React","Flex","SimpleGrid","createStyles","makeStyles","clsx","useStyles","theme","pad","alignItems","justifyContent","box","number","cursor","backgroundColor","width","height","borderRadius","color","fontSize","sign","symbol","NumberPad","props","classes","keypad","value","type","handleClick","input","newInput","substring","setInput","map","key","index","classStr"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Input, Flex, Box, PseudoBox, SimpleGrid } from '@chakra-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    pad: {\n      // width: '300px',\n      alignItems: 'center',\n      justifyContent: 'center',\n      // height: '400px',\n    },\n    box: {\n      // width: '100px',\n      alignItems: 'center',\n      justifyContent: 'center',\n      // height: '100px',\n    },\n    number: {\n      cursor: 'pointer',\n      backgroundColor: 'rgb(51,51,51)',\n      width: '70px',\n      height: '70px',\n      borderRadius: '50%',\n      color: 'white',\n      fontSize: '36px',\n      alignItems: 'center',\n      justifyContent: 'center',\n      '&:hover': {\n        backgroundColor: 'rgb(75,75,75)',\n      },\n      '&:active': {\n        backgroundColor: 'rgb(115,115,115)',\n      },\n    },\n    sign: {\n      backgroundColor: 'rgb(166,166,166)',\n      color: 'black',\n      fontSize: '30px',\n      '&:hover': {\n        backgroundColor: 'rgb(190,190,190)',\n      },\n      '&:active': {\n        backgroundColor: 'rgb(217,217,217)',\n      },\n    },\n    symbol: {\n      backgroundColor: 'rgb(242,162,60)',\n      '&:hover': {\n        backgroundColor: 'rgb(243,180,100)',\n      },\n      '&:active': {\n        backgroundColor: 'rgb(244,200,149)',\n      },\n    },\n  })\n);\n\ninterface INumberPadProps {\n  setInput: (input: string) => void;\n  input: string;\n}\n\nexport default function NumberPad(props: INumberPadProps) {\n  const classes = useStyles();\n  const keypad = [\n    { value: 'AC', type: 'sign' },\n    { value: '+/−', type: 'sign' },\n    { value: '%', type: 'sign' },\n    { value: '÷', type: 'symbol' },\n    { value: '7', type: 'number' },\n    { value: '8', type: 'number' },\n    { value: '9', type: 'number' },\n    { value: 'X', type: 'symbol' },\n    { value: '4', type: 'number' },\n    { value: '5', type: 'number' },\n    { value: '6', type: 'number' },\n    { value: '−', type: 'symbol' },\n    { value: '1', type: 'number' },\n    { value: '2', type: 'number' },\n    { value: '3', type: 'number' },\n    { value: '+', type: 'symbol' },\n    { value: '0', type: 'number' },\n    { value: '00', type: 'number' },\n    { value: '.', type: 'number' },\n    { value: '=', type: 'symbol' },\n  ];\n  const handleClick = (input: string) => {\n    const newInput =\n      props.input[0] === '0'\n        ? props.input.substring(1) + input\n        : props.input + input;\n    props.setInput(newInput);\n  };\n\n  return (\n    <Flex className={classes.pad}>\n      <SimpleGrid columns={4} spacing={3}>\n        {keypad.map((key, index: number) => {\n          let classStr = null;\n          switch (key.value) {\n            case 'number':\n              classStr = 'classes.number';\n              break;\n            case 'number':\n              classStr = 'classes.number';\n              break;\n            default:\n              classStr = 'classes.number';\n              break;\n          }\n          return (\n            <Flex className={classes.box} key={index}>\n              <Flex\n                className={\n                  key.type === 'number'\n                    ? classes.number\n                    : key.type === 'sign'\n                    ? clsx(classes.number, classes.sign)\n                    : clsx(classes.number, classes.symbol)\n                }\n              >\n                {key.value}\n              </Flex>\n            </Flex>\n          );\n        })}\n        <Flex className={classes.box}>\n          <Flex className={clsx(classes.number, classes.sign)}>AC</Flex>\n        </Flex>\n        <Flex className={classes.box}>\n          <Flex className={clsx(classes.number, classes.sign)}>{'+/−'}</Flex>\n        </Flex>\n        <Flex className={classes.box}>\n          <Flex className={clsx(classes.number, classes.sign)}>%</Flex>\n        </Flex>\n        <Flex className={classes.box}>\n          <Flex className={clsx(classes.number, classes.symbol)}>÷</Flex>\n        </Flex>\n        <Flex className={classes.box}>\n          <Flex className={classes.number} onClick={() => handleClick('7')}>\n            7\n          </Flex>\n        </Flex>\n        <Flex className={classes.box}>\n          <Flex className={classes.number} onClick={() => handleClick('7')}>\n            8\n          </Flex>\n        </Flex>\n        <Flex className={classes.box}>\n          <Flex className={classes.number} onClick={() => handleClick('7')}>\n            9\n          </Flex>\n        </Flex>\n        <Flex className={classes.box}>\n          <Flex className={clsx(classes.number, classes.symbol)}>X</Flex>\n        </Flex>\n        <Flex className={classes.box}>\n          <Flex className={classes.number} onClick={() => handleClick('7')}>\n            4\n          </Flex>\n        </Flex>\n        <Flex className={classes.box}>\n          <Flex className={classes.number} onClick={() => handleClick('7')}>\n            5\n          </Flex>\n        </Flex>\n        <Flex className={classes.box}>\n          <Flex className={classes.number} onClick={() => handleClick('7')}>\n            6\n          </Flex>\n        </Flex>\n        <Flex className={classes.box}>\n          <Flex className={clsx(classes.number, classes.symbol)}>−</Flex>\n        </Flex>\n        <Flex className={classes.box}>\n          <Flex className={classes.number} onClick={() => handleClick('7')}>\n            1\n          </Flex>\n        </Flex>\n        <Flex className={classes.box}>\n          <Flex className={classes.number} onClick={() => handleClick('7')}>\n            2\n          </Flex>\n        </Flex>\n        <Flex className={classes.box}>\n          <Flex className={classes.number} onClick={() => handleClick('7')}>\n            3\n          </Flex>\n        </Flex>\n        <Flex className={classes.box}>\n          <Flex className={clsx(classes.number, classes.symbol)}>+</Flex>\n        </Flex>\n        <Flex className={classes.box}>\n          <Flex className={classes.number} onClick={() => handleClick('7')}>\n            0\n          </Flex>\n        </Flex>\n        <Flex className={classes.box}>\n          <Flex className={classes.number} onClick={() => handleClick('7')}>\n            00\n          </Flex>\n        </Flex>\n        <Flex className={classes.box}>\n          <Flex className={classes.number}>.</Flex>\n        </Flex>\n        <Flex className={classes.box}>\n          <Flex className={clsx(classes.number, classes.symbol)}>=</Flex>\n        </Flex>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}