webpackHotUpdate_N_E("pages/index",{

/***/ "./components/number-pad.tsx":
/*!***********************************!*\
  !*** ./components/number-pad.tsx ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return NumberPad; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _chakra_ui_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/core */ \"./node_modules/@chakra-ui/core/dist/es/index.js\");\n/* harmony import */ var _material_ui_core_styles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @material-ui/core/styles */ \"./node_modules/@material-ui/core/esm/styles/index.js\");\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! clsx */ \"./node_modules/clsx/dist/clsx.m.js\");\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-calc/components/number-pad.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;\n\n\n\n\nvar useStyles = Object(_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_2__[\"makeStyles\"])(function (theme) {\n  return Object(_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_2__[\"createStyles\"])({\n    box: {\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    numberSizeSm: {\n      width: '55px',\n      height: '55px'\n    },\n    numberSizeMd: {\n      width: '65px',\n      height: '65px'\n    },\n    number: {\n      cursor: 'pointer',\n      backgroundColor: 'rgb(51,51,51)',\n      borderRadius: '50%',\n      color: 'white',\n      fontSize: '36px',\n      alignItems: 'center',\n      justifyContent: 'center',\n      '&:hover': {\n        backgroundColor: 'rgb(75,75,75)'\n      },\n      '&:active': {\n        backgroundColor: 'rgb(115,115,115)'\n      }\n    },\n    sign: {\n      backgroundColor: 'rgb(166,166,166)',\n      color: 'black',\n      fontSize: '30px',\n      '&:hover': {\n        backgroundColor: 'rgb(190,190,190)'\n      },\n      '&:active': {\n        backgroundColor: 'rgb(217,217,217)'\n      }\n    },\n    selectedSymbol: {\n      backgroundColor: 'white',\n      color: 'rgb(242,162,60)',\n      fontSize: '30px',\n      '&:hover': {\n        backgroundColor: 'rgb(190,190,190)'\n      },\n      '&:active': {\n        backgroundColor: 'rgb(217,217,217)'\n      }\n    },\n    symbol: {\n      backgroundColor: 'rgb(242,162,60)',\n      '&:hover': {\n        backgroundColor: 'rgb(243,180,100)'\n      },\n      '&:active': {\n        backgroundColor: 'rgb(244,200,149)'\n      }\n    }\n  });\n});\nfunction NumberPad(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(0),\n      prev = _useState[0],\n      setPrev = _useState[1];\n\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(0),\n      current = _useState2[0],\n      setCurrent = _useState2[1];\n\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(''),\n      symbol = _useState3[0],\n      setSymbol = _useState3[1];\n\n  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(false),\n      symbolFlag = _useState4[0],\n      setSymbolFlag = _useState4[1];\n\n  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(false),\n      flag = _useState5[0],\n      setFlag = _useState5[1];\n\n  var _useState6 = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(false),\n      isNaN = _useState6[0],\n      setIsNaN = _useState6[1];\n\n  var _useState7 = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(false),\n      isStarted = _useState7[0],\n      setIsStarted = _useState7[1];\n\n  var classes = useStyles();\n  var keypad = [{\n    display: 'AC',\n    type: 'sign',\n    value: 'AC'\n  }, {\n    display: '+/−',\n    type: 'sign',\n    value: '+/−'\n  }, {\n    display: '%',\n    type: 'sign',\n    value: '%'\n  }, {\n    display: '÷',\n    type: 'symbol',\n    value: '/'\n  }, {\n    display: '7',\n    type: 'number',\n    value: '7'\n  }, {\n    display: '8',\n    type: 'number',\n    value: '8'\n  }, {\n    display: '9',\n    type: 'number',\n    value: '9'\n  }, {\n    display: '×',\n    type: 'symbol',\n    value: '*'\n  }, {\n    display: '4',\n    type: 'number',\n    value: '4'\n  }, {\n    display: '5',\n    type: 'number',\n    value: '5'\n  }, {\n    display: '6',\n    type: 'number',\n    value: '6'\n  }, {\n    display: '−',\n    type: 'symbol',\n    value: '-'\n  }, {\n    display: '1',\n    type: 'number',\n    value: '1'\n  }, {\n    display: '2',\n    type: 'number',\n    value: '2'\n  }, {\n    display: '3',\n    type: 'number',\n    value: '3'\n  }, {\n    display: '+',\n    type: 'symbol',\n    value: '+'\n  }, {\n    display: '0',\n    type: 'number',\n    value: '0'\n  }, {\n    display: '00',\n    type: 'number',\n    value: '00'\n  }, {\n    display: '.',\n    type: 'number',\n    value: '.'\n  }, {\n    display: '=',\n    type: 'symbol',\n    value: '='\n  }];\n  var keypadLandscape = [{\n    display: 'AC',\n    type: 'sign',\n    value: 'AC'\n  }, {\n    display: '7',\n    type: 'number',\n    value: '7'\n  }, {\n    display: '8',\n    type: 'number',\n    value: '8'\n  }, {\n    display: '9',\n    type: 'number',\n    value: '9'\n  }, {\n    display: '÷',\n    type: 'symbol',\n    value: '/'\n  }, {\n    display: '+/−',\n    type: 'sign',\n    value: '+/−'\n  }, {\n    display: '4',\n    type: 'number',\n    value: '4'\n  }, {\n    display: '5',\n    type: 'number',\n    value: '5'\n  }, {\n    display: '6',\n    type: 'number',\n    value: '6'\n  }, {\n    display: '×',\n    type: 'symbol',\n    value: '*'\n  }, {\n    display: '%',\n    type: 'sign',\n    value: '%'\n  }, {\n    display: '1',\n    type: 'number',\n    value: '1'\n  }, {\n    display: '2',\n    type: 'number',\n    value: '2'\n  }, {\n    display: '3',\n    type: 'number',\n    value: '3'\n  }, {\n    display: '−',\n    type: 'symbol',\n    value: '-'\n  }, {\n    display: '=',\n    type: 'symbol',\n    value: '='\n  }, {\n    display: '.',\n    type: 'number',\n    value: '.'\n  }, {\n    display: '0',\n    type: 'number',\n    value: '0'\n  }, {\n    display: '00',\n    type: 'number',\n    value: '00'\n  }, {\n    display: '+',\n    type: 'symbol',\n    value: '+'\n  }];\n\n  var calc = function calc(num1, num2, sign) {\n    switch (sign) {\n      case '+':\n        return num1 + num2;\n\n      case '-':\n        return num1 - num2;\n\n      case '÷':\n        return num1 / num2;\n\n      case '/':\n        return num1 / num2;\n\n      case '×':\n        return num1 * num2;\n\n      case '*':\n        return num1 * num2;\n\n      case '%':\n        return Number(props.input) * 0.01;\n\n      case '+/−':\n        return Number(props.input) * -1;\n    }\n\n    return 0;\n  };\n\n  var downHandler = function downHandler(_ref) {\n    var key = _ref.key;\n\n    if (key === '0' || key === '1' || key === '2' || key === '3' || key === '4' || key === '5' || key === '6' || key === '7' || key === '8' || key === '9') {\n      if (!isNaN) handleNumberClick(key.toString());\n    } else if (key === '-' || key === '+' || key === '/' || key === '*' || key === '.' || key === '%') {\n      handleSignClick(key);\n    } else if (key === 'Enter' || key === '=') {\n      handleSignClick('=');\n    }\n  };\n\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(function () {\n    window.addEventListener('keyup', downHandler); // Remove event listeners on cleanup\n\n    return function () {\n      window.removeEventListener('keyup', downHandler);\n    };\n  });\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(function () {\n    if (props.input.length > 25) setIsNaN(true);else setIsNaN(false);\n  }, [props.input]);\n\n  var handleInput = function handleInput(inputStr) {\n    props.setInput(inputStr);\n  };\n\n  var handleNumberClick = function handleNumberClick(input) {\n    var newInput = '';\n    var newCurrent = props.input;\n    var prevInput = flag ? '0' : newCurrent;\n\n    switch (input) {\n      case '0':\n        newInput = prevInput !== '0' ? prevInput.toString() + input : '0';\n        break;\n\n      case '00':\n        newInput = prevInput !== '0' ? prevInput.toString() + input : '0';\n        break;\n\n      case '.':\n        if (!props.input.toString().includes('.')) {\n          newInput = \"\".concat(props.input, \".\");\n        } else {\n          return;\n        }\n\n        break;\n\n      default:\n        console.log(prevInput);\n        newInput = Number(prevInput) !== 0 ? prevInput.toString() + input : prevInput.toString().substring(1) + input;\n    }\n\n    setFlag(false);\n    setCurrent(Number(newInput));\n    handleInput(newInput);\n  };\n\n  var initValue = function initValue() {\n    handleInput('0');\n    setPrev(0);\n    setCurrent(0);\n    setSymbol('');\n    setFlag(false);\n  };\n\n  var handleSignClick = function handleSignClick(input) {\n    switch (input) {\n      case 'AC':\n        initValue();\n        break;\n\n      case '%':\n        handleInput(calc(prev, current, input).toString());\n        break;\n\n      case '+/−':\n        handleInput(calc(prev, current, input).toString());\n        break;\n\n      case '=':\n        console.log(prev, current, symbol);\n        var newInput1 = calc(prev, current, symbol);\n        setPrev(newInput1);\n        handleInput(newInput1.toString()); // setSymbol(input);\n\n        setFlag(true);\n        break;\n\n      default:\n        var newInput2 = calc(prev, current, symbol);\n        setFlag(true);\n        setSymbol(input);\n\n        if (symbol === input) {\n          if (symbolFlag) {\n            setPrev(newInput2);\n            handleInput(newInput2.toString());\n            setSymbolFlag(false);\n          } else {\n            setPrev(Number(props.input));\n          }\n        } else {\n          setPrev(Number(props.input));\n          setSymbolFlag(true);\n        }\n\n    }\n  };\n\n  var isLandscape = props.height <= 414;\n  var isSmall = props.height <= 320;\n  var pad = isLandscape ? keypadLandscape : keypad;\n  return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_1__[\"Flex\"], {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 5\n    }\n  }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_1__[\"SimpleGrid\"], {\n    columns: isLandscape ? 5 : 4,\n    spacing: isSmall ? 1 : 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }\n  }, pad.map(function (key, index) {\n    var keyValue = key.display === 'AC' && props.input !== '0' ? 'C' : key.display;\n    var classStr = null;\n\n    switch (key.type) {\n      case 'symbol':\n        if (symbol === key.value) {\n          classStr = Object(clsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(isSmall ? classes.numberSizeSm : classes.numberSizeMd, classes.number, classes.selectedSymbol);\n        } else {\n          classStr = Object(clsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(isSmall ? classes.numberSizeSm : classes.numberSizeMd, classes.number, classes.symbol);\n        }\n\n        break;\n\n      case 'sign':\n        classStr = Object(clsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(isSmall ? classes.numberSizeSm : classes.numberSizeMd, classes.number, classes.sign);\n        break;\n\n      default:\n        classStr = Object(clsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(isSmall ? classes.numberSizeSm : classes.numberSizeMd, classes.number);\n    }\n\n    return __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_1__[\"Flex\"], {\n      className: classes.box,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }\n    }, __jsx(_chakra_ui_core__WEBPACK_IMPORTED_MODULE_1__[\"Flex\"], {\n      onClick: function onClick() {\n        return key.type === 'number' ? handleNumberClick(key.value) : handleSignClick(key.value);\n      },\n      className: classStr,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 15\n      }\n    }, keyValue));\n  })));\n}\n\n_s(NumberPad, \"P4TH93DaLuUbnVBPFQluYF4Qzco=\", false, function () {\n  return [useStyles];\n});\n\n_c = NumberPad;\n\nvar _c;\n\n$RefreshReg$(_c, \"NumberPad\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/number-pad.tsx\n");

/***/ })

})